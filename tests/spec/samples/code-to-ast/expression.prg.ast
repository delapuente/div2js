{
  "type": "Unit",
  "program": {
    "type": "Program",
    "name": {
      "type": "Identifier",
      "name": "basic"
    },
    "consts": null,
    "globals": null,
    "locals": null,
    "privates": null,
    "body": {
      "type": "ProcessBody",
      "sentences": [
        {
          "type": "ExpressionSentence",
          "expression": {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "Identifier",
              "name": "a"
            },
            "right": {
              "type": "AssignmentExpression",
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "name": "b"
              },
              "right": {
                "type": "RelationalExpression",
                "operator": "<=",
                "left": {
                  "type": "RelationalExpression",
                  "operator": "<",
                  "left": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1"
                  },
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2"
                  }
                },
                "right": {
                  "type": "LogicalExpression",
                  "operator": "^",
                  "left": {
                    "type": "LogicalExpression",
                    "operator": "||",
                    "left": {
                      "type": "Literal",
                      "value": 3,
                      "raw": "3"
                    },
                    "right": {
                      "type": "Literal",
                      "value": 4,
                      "raw": "4"
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": ">>",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "<<",
                      "left": {
                        "type": "Literal",
                        "value": 5,
                        "raw": "5"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 6,
                        "raw": "6"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "-",
                      "left": {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "Literal",
                          "value": 7,
                          "raw": "7"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 8,
                          "raw": "8"
                        }
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": "/",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "*",
                          "left": {
                            "type": "Literal",
                            "value": 9,
                            "raw": "9"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 10,
                            "raw": "10"
                          }
                        },
                        "right": {
                          "type": "UnaryExpression",
                          "operator": "*",
                          "argument": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "argument": {
                              "type": "UpdateExpression",
                              "operator": "++",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": true,
                                "structure": {
                                  "type": "Identifier",
                                  "name": "a"
                                },
                                "property": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "p"
                                    },
                                    "arguments": []
                                  },
                                  "right": {
                                    "type": "UpdateExpression",
                                    "operator": "--",
                                    "argument": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "structure": {
                                        "type": "Identifier",
                                        "name": "a"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "x"
                                      }
                                    },
                                    "prefix": false
                                  }
                                }
                              },
                              "prefix": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "processes": []
}
