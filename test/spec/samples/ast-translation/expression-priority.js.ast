{
  "type": "WhileStatement",
  "test": {
    "type": "Literal",
    "value": true,
    "raw": "true"
  },
  "body": {
    "type": "BlockStatement",
    "body": [{
      "type": "SwitchStatement",
      "discriminant": {
        "type": "MemberExpression",
        "computed": false,
        "object": {
          "type": "Identifier",
          "name": "exec"
        },
        "property": {
          "type": "Identifier",
          "name": "pc"
        }
      },
      "cases": [{
        "type": "SwitchCase",
        "test": {
          "type": "Literal",
          "value": 1,
          "raw": "1"
        },
        "consequent": [{
          "type": "ExpressionStatement",
          "expression": {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "computed": true,
              "object": {
                "type": "Identifier",
                "name": "mem"
              },
              "property": {
                "type": "BinaryExpression",
                "operator": "+",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "+",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "exec"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "base"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "P_OFFSET"
                  }
                },
                "right": {
                  "type": "Identifier",
                  "name": "a"
                }
              }
            },
            "right": {
              "type": "AssignmentExpression",
              "operator": "+=",
              "left": {
                "type": "MemberExpression",
                "computed": true,
                "object": {
                  "type": "Identifier",
                  "name": "mem"
                },
                "property": {
                  "type": "BinaryExpression",
                  "operator": "+",
                  "left": {
                    "type": "BinaryExpression",
                    "operator": "+",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exec"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "base"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "P_OFFSET"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "b"
                  }
                }
              },
              "right": {
                "type": "BinaryExpression",
                "operator": "<=",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "<",
                  "left": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1"
                  },
                  "right": {
                    "type": "Literal",
                    "value": 2,
                    "raw": "2"
                  }
                },
                "right": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "__xor"
                  },
                  "arguments": [{
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "__or"
                    },
                    "arguments": [{
                      "type": "Literal",
                      "value": 3,
                      "raw": "3"
                    }, {
                      "type": "Literal",
                      "value": 4,
                      "raw": "4"
                    }]
                  }, {
                    "type": "BinaryExpression",
                    "operator": ">>",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "<<",
                      "left": {
                        "type": "Literal",
                        "value": 5,
                        "raw": "5"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 6,
                        "raw": "6"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "-",
                      "left": {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "Literal",
                          "value": 7,
                          "raw": "7"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 8,
                          "raw": "8"
                        }
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": "/",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "*",
                          "left": {
                            "type": "Literal",
                            "value": 9,
                            "raw": "9"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 10,
                            "raw": "10"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": 11,
                          "raw": "11"
                        }
                      }
                    }
                  }]
                }
              }
            }
          }
        }, {
          "type": "ReturnStatement",
          "argument": {
            "type": "Identifier",
            "name": "__yieldEnd"
          }
        }]
      }]
    }]
  }
}
