const MS_DOS_ASCII = [
  "\u0000",
  "\u0001",
  "\u0002",
  "\u0003",
  "\u0004",
  "\u0005",
  "\u0006",
  "\u0007",
  "\b",
  "\t",
  "\n",
  "\u000B",
  "\f",
  "\r",
  "\u000E",
  "\u000F",
  "\u0010",
  "\u0011",
  "\u0012",
  "\u0013",
  "\u0014",
  "\u0015",
  "\u0016",
  "\u0017",
  "\u0018",
  "\u0019",
  "\u001A",
  "\u001B",
  "\u001C",
  "\u001D",
  "\u001E",
  "\u001F",
  " ",
  "!",
  '"',
  "#",
  "$",
  "%",
  "&",
  "'",
  "(",
  ")",
  "*",
  "+",
  ",",
  "-",
  ".",
  "/",
  "0",
  "1",
  "2",
  "3",
  "4",
  "5",
  "6",
  "7",
  "8",
  "9",
  ":",
  ";",
  "<",
  "=",
  ">",
  "?",
  "@",
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
  "G",
  "H",
  "I",
  "J",
  "K",
  "L",
  "M",
  "N",
  "O",
  "P",
  "Q",
  "R",
  "S",
  "T",
  "U",
  "V",
  "W",
  "X",
  "Y",
  "Z",
  "[",
  "\\",
  "]",
  "^",
  "_",
  "`",
  "a",
  "b",
  "c",
  "d",
  "e",
  "f",
  "g",
  "h",
  "i",
  "j",
  "k",
  "l",
  "m",
  "n",
  "o",
  "p",
  "q",
  "r",
  "s",
  "t",
  "u",
  "v",
  "w",
  "x",
  "y",
  "z",
  "{",
  "|",
  "}",
  "~",
  "\u007F",
  "Ç",
  "ü",
  "é",
  "â",
  "ä",
  "à",
  "å",
  "ç",
  "ê",
  "ë",
  "è",
  "ï",
  "î",
  "ì",
  "Ä",
  "Å",
  "É",
  "æ",
  "Æ",
  "ô",
  "ö",
  "ò",
  "û",
  "ù",
  "ÿ",
  "Ö",
  "Ü",
  "¢",
  "£",
  "¥",
  "₧",
  "ƒ",
  "á",
  "í",
  "ó",
  "ú",
  "ñ",
  "Ñ",
  "ª",
  "º",
  "¿",
  "⌐",
  "¬",
  "½",
  "¼",
  "¡",
  "«",
  "»",
  "░",
  "▒",
  "▓",
  "│",
  "┤",
  "╡",
  "╢",
  "╖",
  "╕",
  "╣",
  "║",
  "╗",
  "╝",
  "╜",
  "╛",
  "┐",
  "└",
  "┴",
  "┬",
  "├",
  "─",
  "┼",
  "╞",
  "╟",
  "╚",
  "╔",
  "╩",
  "╦",
  "╠",
  "═",
  "╬",
  "╧",
  "╨",
  "╤",
  "╥",
  "╙",
  "╘",
  "╒",
  "╓",
  "╫",
  "╪",
  "┘",
  "┌",
  "█",
  "▄",
  "▌",
  "▐",
  "▀",
  "α",
  "ß",
  "Γ",
  "π",
  "Σ",
  "σ",
  "µ",
  "τ",
  "Φ",
  "Θ",
  "Ω",
  "δ",
  "∞",
  "φ",
  "ε",
  "∩",
  "≡",
  "±",
  "≥",
  "≤",
  "⌠",
  "⌡",
  "÷",
  "≈",
  "°",
  "∙",
  "·",
  "√",
  "ⁿ",
  "²",
  "■",
  "\u00FF",
];

const MS_DOS_ASCII_TO_UTF16 = MS_DOS_ASCII.map((char) => char.charCodeAt(0));

export class PRGFile {
  static fromArrayBuffer(buffer: ArrayBuffer): PRGFile {
    const bytes = new Uint8Array(buffer);
    const decoded = new Uint16Array(bytes.length);
    bytes.forEach((byte, index) => {
      decoded[index] = MS_DOS_ASCII_TO_UTF16[byte];
    });
    return new PRGFile(decoded);
  }

  readonly text: string;

  constructor(readonly buffer: Uint16Array) {
    this.text = String.fromCharCode(...buffer);
  }
}
